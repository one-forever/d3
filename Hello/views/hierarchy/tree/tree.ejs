<%- layout('layout') %>
<style>

  .node circle {
    fill:yellow ;
    stroke: red;
    stroke-width: 1.5px;
  }

  .link {
    fill: none;
    stroke: green;
    stroke-width: 1.5px;
  }

</style>
<script type="text/javascript">
  let data = {
      "name": "Eve",
      "children": [
          {
              "name": "Cain"
          },
          {
              "name": "Seth",
              "children": [
                  {
                      "name": "Enos"
                  },
                  {
                      "name": "Noam"
                  }
              ]
          },
          {
              "name": "Abel"
          },
          {
              "name": "Awan",
              "children": [
                  {
                      "name": "Enoch"
                  }
              ]
          },
          {
              "name": "Azura"
          }
      ]
  };
  let width = 960;
  let nodes = d3.hierarchy(data).sort(function (a, b) {
      return b.height - a.height;
  });
  console.log('nodesData: ', nodes);
  let cluster = d3.tree().size([width / 2, width / 2]);
  cluster(nodes);
  console.log(nodes.descendants(), nodes.links());

  let svg = d3.select('body').append('svg')
      .attr('width', width)
      .attr('height', width)
      .append('g')
      .attr('transform', `translate(10, 0)`)
  let link = svg.selectAll('.link')
      .data(nodes.links())
      .enter()
      .append('path')
      .attr('class', 'link')
      .attr('d', d3.linkHorizontal()
          .x(function(d) { return d.y; })
          .y(function(d) { return d.x; }))

  let node = svg.selectAll('.node')
      .data(nodes.descendants())
      .enter()
      .append('g')
      .attr('class', 'node')
      .attr("transform", function(d) { return "translate(" + d.y + "," + d.x + ")"; })



  node.append("circle")
      .attr("r", 4.5);
//      .call(nodes);
</script>